{
	"info": {
		"_postman_id": "34dd133c-a93f-4e1d-a6f3-9c75f9f90cbd",
		"name": "F5 Programmability: Class 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Lab 1.2 - API Authentication & 'example' Templates",
			"item": [
				{
					"name": "Step 1: HTTP BASIC Authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"kind\", ",
									"            \"value\":\"tm:ltm:ltmcollectionstate\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "",
									"type": "string"
								},
								{
									"key": "password",
									"value": "",
									"type": "string"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2: Retrieve Authentication Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"token.userName\", ",
									"            \"value\":\"admin\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\":\"\",\n    \"password\":\"\",\n    \"loginProviderName\":\"tmos\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/authn/login",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authn",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3: Verify Authentication Works",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"items\", ",
									"            \"value\":\"0\",",
									"            \"op\":\">=\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": ""
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/authz/tokens",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authz",
								"tokens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 4: Set Authentication Token Timeout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"timeout\", ",
									"            \"value\":\"36000\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"timeout\":\"36000\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/authz/tokens/{{bigip_a_auth_token}}",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"authz",
								"tokens",
								"{{bigip_a_auth_token}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 5: Get 'example' of a Pool Resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"kind\", ",
									"            \"value\":\"tm:ltm:pool:poolcollectionstate\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/pool/example",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"pool",
								"example"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lab 1.3 - Review/Set Device Settings",
			"item": [
				{
					"name": "Step 1: Get System Global-Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"kind\", ",
									"            \"value\":\"tm:sys:global-settings:global-settingsstate\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/sys/global-settings",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"sys",
								"global-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2: Set System Global-Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"hostname\", ",
									"            \"value\":\"bigip-a.f5.local\" ",
									"        },",
									"        {",
									"            \"path\":\"guiSetup\",",
									"            \"value\":\"disabled\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"guiSetup\": \"disabled\",\n  \"hostname\": \"\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/sys/global-settings",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"sys",
								"global-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3: Set System Device Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"command\": \"run\",\n    \"utilCmdArgs\": \"-c 'tmsh mv cm device bigip1 {{bigip_a_hostname}}'\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/util/bash",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"util",
								"bash"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 4: Get System DNS Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"kind\", ",
									"            \"value\":\"tm:sys:dns:dnsstate\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/sys/dns",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"sys",
								"dns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 5: Set System DNS Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"nameServers.0\", ",
									"            \"value\": \"4.2.2.2\"",
									"        },",
									"        { ",
									"            \"path\":\"nameServers.1\", ",
									"            \"value\": \"8.8.8.8\"",
									"        },",
									"        { ",
									"            \"path\":\"search.0\", ",
									"            \"value\": \"localhost\"",
									"        },",
									"        { ",
									"            \"path\":\"search.1\", ",
									"            \"value\": \"f5.local\"",
									"        }          ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nameServers\": [\n    \"4.2.2.2\",\n    \"8.8.8.8\"\n  ],\n  \"search\": [\n    \"localhost\"\n  ]\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/sys/dns",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"sys",
								"dns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 6: Get System NTP Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"kind\", ",
									"            \"value\":\"tm:sys:ntp:ntpstate\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/sys/ntp",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"sys",
								"ntp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 7: Set System NTP Settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"servers.0\", ",
									"            \"value\": \"0.pool.ntp.org\"",
									"        },",
									"        { ",
									"            \"path\":\"servers.1\", ",
									"            \"value\": \"1.pool.ntp.org\"",
									"        },",
									"        { ",
									"            \"path\":\"timezone\", ",
									"            \"value\": \"America/Los_Angeles\"",
									"        }        ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"servers\": [\n    \"0.pool.ntp.org\",\n    \"1.pool.ntp.org\"\n  ],\n  \"timezone\": \"America/Los_Angeles\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/sys/ntp",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"sys",
								"ntp"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 8: Create a VLAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vlan = function(resp) {",
									"    if(resp.name == \"Internal\" &&",
									"       resp.tag == \"20\" &&",
									"       resp.interfacesReference.items[0].name == \"1.2\") {",
									"        tests[\"VLAN Internal Configured Correctly\"] = 1;",
									"        return 1;",
									"    }",
									"    else if(resp.name == \"External\" &&",
									"       resp.tag == \"10\" &&",
									"       resp.interfacesReference.items[0].name == \"1.1\") {",
									"        tests[\"VLAN External Configured Correctly\"] = 1;",
									"        return 1;",
									"    } else {",
									"        tests[\"VLAN Configured Correctly'\"] = 0;",
									"        return 0;",
									"    }",
									"};",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\", ",
									"            \"value\": check_vlan",
									"        }       ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Internal\",\n  \"partition\": \"Common\",\n  \"autoLasthop\": \"default\",\n  \"cmpHash\": \"default\",\n  \"mtu\": \"1500\",\n  \"tag\": \"20\",\n  \"interfaces\": \n    [ \n        {\n            \"name\":\"1.2\",\n            \"tagged\":false\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/vlan/?expandSubcollections=true",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"vlan",
								""
							],
							"query": [
								{
									"key": "expandSubcollections",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 9: Get VLANs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vlan = function(resp) {",
									"    if(resp.items.length != 2) {",
									"        tests[\"Correct number of VLANs configured\"] = 0;",
									"    } ",
									"    ",
									"    var internal_ok = false;",
									"    var external_ok = false;",
									"    tests[\"VLAN Internal Configured Correctly\"] = 0;",
									"    tests[\"VLAN External Configured Correctly\"] = 0;",
									"    ",
									"    for(var i=0; i < resp.items.length; i++) {",
									"        var vlan = resp.items[i];",
									"        if(vlan.name == \"Internal\" &&",
									"           vlan.tag == \"20\" &&",
									"           vlan.interfacesReference.items[0].name == \"1.1\") {",
									"            tests[\"VLAN Internal Configured Correctly\"] = 1;",
									"            internal_ok = true;",
									"        }",
									"        if(vlan.name == \"External\" &&",
									"           vlan.tag == \"10\" &&",
									"           vlan.interfacesReference.items[0].name == \"1.2\") {",
									"            tests[\"VLAN External Configured Correctly\"] = 1;",
									"            external_ok = true;",
									"        } ",
									"    }",
									"    ",
									"    if(internal_ok && external_ok) {",
									"        tests[\"VLANs Configured Correctly'\"] = 1;",
									"        return 1;",
									"    } else {",
									"        tests[\"VLANs Configured Correctly'\"] = 0;",
									"        return 0;",
									"    }",
									"    ",
									"};",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"check_created_vlans\", ",
									"            \"value\": check_vlan",
									"        }       ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/vlan/?expandSubcollections=true",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"vlan",
								""
							],
							"query": [
								{
									"key": "expandSubcollections",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 10: Create Internal Self IP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\", ",
									"            \"value\": \"Self-Internal\"",
									"        },",
									"        { ",
									"            \"path\":\"address\", ",
									"            \"value\": \"10.1.20.7/24\"",
									"        },",
									"        { ",
									"            \"path\":\"vlan\", ",
									"            \"value\": \"/\\/Common\\/Internal|External/i\",",
									"            \"op\":\"regex\"",
									"        }        ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Self-Internal\",\n   \"partition\": \"Common\",\n   \"address\": \"10.1.20.7/24\",\n   \"floating\": \"disabled\",\n   \"trafficGroup\": \"/Common/traffic-group-local-only\",\n   \"vlan\": \"/Common/Internal\",\n   \"allowService\": [\n     \"default\"\n   ]\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/self/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"self",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 11: Create External Self IP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\", ",
									"            \"value\": \"Self-External\"",
									"        },",
									"        { ",
									"            \"path\":\"address\", ",
									"            \"value\": \"10.1.10.7/24\"",
									"        },",
									"        { ",
									"            \"path\":\"vlan\", ",
									"            \"value\": \"/Common/External\"",
									"        }        ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"name\": \"Self-External\",\n   \"partition\": \"Common\",\n   \"address\": \"10.1.10.7/24\",\n   \"floating\": \"disabled\",\n   \"trafficGroup\": \"/Common/traffic-group-local-only\",\n   \"vlan\": \"/Common/External\",\n   \"allowService\": [\n     \"default\"\n   ]\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/self/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"self",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 12: Get Self IPs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vlan = function(resp) {",
									"    if(resp.items.length != 2) {",
									"        tests[\"Correct number of Self-IPs configured\"] = 0;",
									"    } ",
									"    ",
									"    var internal_ok = false;",
									"    var external_ok = false;",
									"    tests[\"Self-Internal Configured Correctly\"] = 0;",
									"    tests[\"Self-External Configured Correctly\"] = 0;",
									"    ",
									"    for(var i=0; i < resp.items.length; i++) {",
									"        var item = resp.items[i];",
									"        if(item.name == \"Self-Internal\" &&",
									"           item.address == \"10.1.20.7/24\" &&",
									"           item.vlan == \"/Common/Internal\") {",
									"            tests[\"Self-Internal Configured Correctly\"] = 1;",
									"            internal_ok = true;",
									"        }",
									"        if(item.name == \"Self-External\" &&",
									"           item.address == \"10.1.10.7/24\" &&",
									"           item.vlan == \"/Common/External\") {",
									"            tests[\"Self-External Configured Correctly\"] = 1;",
									"            external_ok = true;",
									"        } ",
									"    }",
									"    ",
									"    if(internal_ok && external_ok) {",
									"        tests[\"Self-IPs Configured Correctly'\"] = 1;",
									"        return 1;",
									"    } else {",
									"        tests[\"VLANs Configured Correctly'\"] = 0;",
									"        return 0;",
									"    }",
									"    ",
									"};",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"check_created_vlans\", ",
									"            \"value\": check_vlan",
									"        }       ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/self?expandSubcollections=true",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"self"
							],
							"query": [
								{
									"key": "expandSubcollections",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 13: Get Routes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"kind\", ",
									"            \"value\":\"tm:net:route:routecollectionstate\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/route?expandSubcollections=true",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"route"
							],
							"query": [
								{
									"key": "expandSubcollections",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 14: Create a Route",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"name\", ",
									"            \"value\":\"Default\" ",
									"        },",
									"        { ",
									"            \"path\":\"gw\", ",
									"            \"value\":\"10.1.10.1\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Default\",\n  \"partition\": \"Common\",\n  \"gw\": \"10.1.10.1\",\n  \"mtu\": 0,\n  \"network\": \"0.0.0.0/0\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/route",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"route"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 15: Get Routes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"items.0.name\", ",
									"            \"value\":\"Default\" ",
									"        },",
									"        { ",
									"            \"path\":\"items.0.gw\", ",
									"            \"value\":\"10.1.10.1\" ",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/net/route?expandSubcollections=true",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"net",
								"route"
							],
							"query": [
								{
									"key": "expandSubcollections",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 16: Save config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"command\": \"run\",\n    \"utilCmdArgs\": \"-c 'tmsh save /sys config'\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/util/bash",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"util",
								"bash"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lab 1.4 - Deploy Application using Imperative API Calls",
			"item": [
				{
					"name": "Step 1 Create - LTM Node",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200) {\r",
									"    pm.collectionVariables.set('PRIOR_RESPONSE', 'OK');\r",
									"    pm.test(\"Created Node\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"} else\r",
									"    pm.test(\"Node Exists\", function () {\r",
									"        pm.response.to.have.status(409);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"name\": \"node1\",\r\n    \"address\": \"10.1.20.11\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/node/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"node",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2 Get - LTM Nodes",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/node/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"node",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3 Create - LTM Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200) {\r",
									"    pm.collectionVariables.set('PRIOR_RESPONSE', 'OK');\r",
									"    pm.test(\"Created Pool\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"} else\r",
									"    pm.test(\"Pool Exists\", function () {\r",
									"        pm.response.to.have.status(409);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lab1.4_pool\",\n    \"monitor\": \"Lab1.4_monitor\",\n    \"members\": \"node1:8080\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/pool/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"pool",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 4 Create - LTM Monitor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200) {\r",
									"    pm.collectionVariables.set('PRIOR_RESPONSE', 'OK');\r",
									"    pm.test(\"Created Monitor\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"} else\r",
									"    pm.test(\"Monitor Exists\", function () {\r",
									"        pm.response.to.have.status(409);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Lab1.4_monitor\",\n\t\"partition\": \"Common\",\n\t\"defaultsFrom\": \"/Common/http\",\n\t\"destination\": \"*.*\",\n\t\"interval\": \"10\",\n\t\"timeout\": \"31\",\n\t\"send\":\"GET / HTTP/1.0\\r\\n\\r\\n\",\n    \"recv\":\"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/monitor/http/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"monitor",
								"http",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 5 Get - LTM Monitor",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/monitor/http/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"monitor",
								"http",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 6 Create - LTM Pool",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200) {\r",
									"    pm.collectionVariables.set('PRIOR_RESPONSE', 'OK');\r",
									"    pm.test(\"Created Pool\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"} else\r",
									"    pm.test(\"Pool Exists\", function () {\r",
									"        pm.response.to.have.status(409);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Lab1.4_pool\",\n    \"monitor\": \"Lab1.4_monitor\",\n    \"members\": \"node1:8080\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/pool/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"pool",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 7 Get - LTM Pool",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/pool/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"pool",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 8 Create - LTM HTTP Profile (HTTP)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200) {\r",
									"    pm.collectionVariables.set('PRIOR_RESPONSE', 'OK');\r",
									"    pm.test(\"Created HTTP Profile (HTTP)\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"} else\r",
									"    pm.test(\"HTTP Profile Exists\", function () {\r",
									"        pm.response.to.have.status(409);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Lab1.4_http\",\n\t\"defaultsFrom\": \"/Common/http\",\n\t\"insertXforwardedFor\":\"enabled\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/profile/http/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"profile",
								"http",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 9 Get - LTM HTTP Profile (HTTP)",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/profile/http/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"profile",
								"http",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 10 Create - LTM Virtual Server (80)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseCode.code === 200) {\r",
									"    pm.collectionVariables.set('PRIOR_RESPONSE', 'OK');\r",
									"    pm.test(\"Created Virtual Server 80\", function () {\r",
									"        pm.response.to.have.status(200);\r",
									"    });\r",
									"} else\r",
									"    pm.test(\"Virtual Server 80 Exists\", function () {\r",
									"        pm.response.to.have.status(409);\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n    \"name\": \"Lab1.4_vs_80\",\r\n    \"destination\": \"10.1.10.100:80\",\r\n    \"mask\": \"255.255.255.255\",\r\n    \"pool\": \"Lab1.4_pool\",\r\n    \"profilesReference\": {\"items\": [ {\"context\": \"all\", \"name\": \"Lab1.4_http\"}, {\"context\": \"all\", \"name\": \"f5-tcp-progressive\"}] }, \r\n    \"rules\": [\"_sys_https_redirect\"],\r\n    \"sourceAddressTranslation\": {\"type\": \"automap\"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/virtual/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"virtual",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 11 Get - LTM Virtual Server",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/ltm/virtual/",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"ltm",
								"virtual",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 12: Save config",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"command\": \"run\",\n    \"utilCmdArgs\": \"-c 'tmsh save /sys config'\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/tm/util/bash",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"tm",
								"util",
								"bash"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lab 2.2 - Install AS3 onto BIG-IP",
			"item": [
				{
					"name": "Step 1: Get Installed iControl LX Extensions",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"kind\",",
									"            \"value\":\"shared:iapp:installed-packages:installedpackagecollectionstate\",",
									"        }       ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/iapp/installed-packages",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"iapp",
								"installed-packages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2: Upload AS3 Extension RPM",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"localFilePath\",",
									"            \"value\":\"/f5-appsvcs-3..*.noarch.rpm$/i\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// Create the value for the Content-Range header based on the file size of the RPM",
									"// https://devcentral.f5.com/articles/demystifying-icontrol-rest-part-5-transferring-files",
									"",
									"var fileLen = parseInt(pm.environment.get(\"as3_filelen\"));",
									"pm.globals.set(\"_as3_content_range\",\"0-\" + (fileLen - 1) + \"/\" + fileLen);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Range",
								"value": "{{_as3_content_range}}"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"body": {
							"mode": "file",
							"file": {}
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/file-transfer/uploads/{{as3_filename}}",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"file-transfer",
								"uploads",
								"{{as3_filename}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3: Create AS3 Extension Install Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"status\",",
									"            \"value\":\"CREATED\"",
									"        }       ",
									"    ];",
									"var populate_vars = [",
									"        { ",
									"            \"name\":\"_as3_install_uuid\",",
									"            \"value\":\"id\"",
									"        }      ",
									"    ];",
									"    ",
									"f5_populate_env_vars(populate_vars);",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"operation\":\"INSTALL\",\n  \"packageFilePath\":\"/var/config/rest/downloads/{{as3_filename}}\"\n}"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/iapp/package-management-tasks",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"iapp",
								"package-management-tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 4: Get AS3 Install Task Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"status\",",
									"            \"value\":\"FINISHED\"",
									"        }       ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/iapp/package-management-tasks/{{_as3_install_uuid}}",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"iapp",
								"package-management-tasks",
								"{{_as3_install_uuid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 5: Get AS3 Version Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"version\",",
									"            \"value\":\"/^3./i\",",
									"            \"op\":\"regex\"",
									"        }       ",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Connection",
								"value": "keep-alive"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/info",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"info"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Lab 2.3 - Application Service Deployments with AS3",
			"item": [
				{
					"name": "Step 1: Get Deployed AS3 Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"f5_check_response_code(1);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 2: Deploy HTTP_Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"class\": \"AS3\",\n    \"action\": \"deploy\",\n    \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.1.0\",\n        \"id\": \"SuperNetOps_Class_1_Lab2_3_Step2\",\n        \"label\": \"SuperNetOps_Class_1_Lab2_3_Step2\",\n        \"remark\": \"Super NetOps Class 1 Lab 2.3 Step2\",\n        \"Tenant1\": {\n            \"class\": \"Tenant\",\n            \"HTTP_Service\": {\n                \"class\": \"Application\",\n                \"template\": \"http\",\n                \"serviceMain\": {\n                    \"class\": \"Service_HTTP\",\n                    \"virtualAddresses\": [\n                        \"10.1.10.121\"\n                    ],\n                    \"snat\": \"auto\",\n                    \"pool\": \"Pool1\"\n                },\n                \"Pool1\": {\n                    \"class\": \"Pool\",\n                    \"monitors\": [\n                        \"http\"\n                    ],\n                    \"members\": [\n                      {\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                              \"10.1.20.11\"\n                            ]\n                        },\n                        {\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                                \"10.1.20.12\"\n                            ]\n                        }\n\n                    ]\n                }\n            }            \n        }\n    }\n }"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 3: POST to Modify HTTP_Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"class\": \"AS3\",\n    \"action\": \"deploy\",\n    \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.1.0\",\n        \"id\": \"SuperNetOps_Class_1_Lab2_3_Step3\",\n        \"label\": \"SuperNetOps_Class_1_Lab2_3_Step3\",\n        \"remark\": \"Super NetOps Class 1 Lab 2.3 Step 3\",\n        \"Tenant1\": {\n            \"class\": \"Tenant\",\n            \"HTTP_Service\": {\n                \"class\": \"Application\",\n                \"template\": \"http\",\n                \"serviceMain\": {\n                    \"class\": \"Service_HTTP\",\n                    \"virtualAddresses\": [\n                        \"10.1.10.121\"\n                    ],\n                    \"snat\": \"auto\",                    \n                    \"pool\": \"Pool1\"\n                },\n                \"Pool1\": {\n                    \"class\": \"Pool\",\n                    \"monitors\": [\n                        \"http\"\n                    ],\n                    \"members\": [\n                      {\n                        \"enable\": false,\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                              \"10.1.20.11\"\n                            ]\n                        },\n                        {\n                        \"enable\": false,\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                                \"10.1.20.12\"\n                            ]\n                        }\n\n                    ]\n                }\n            }            \n        }\n    }\n }"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 4: PATCH to Modify Service_HTTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"op\":\"replace\",\n    \"path\":\"/Tenant1/HTTP_Service/Pool1/members/0/enable\",\n    \"value\": true\n  },\n  {\n    \"op\":\"replace\",\n    \"path\":\"/Tenant1/HTTP_Service/Pool1/members/1/enable\",\n    \"value\": true\n  },\n  {\n    \"op\":\"add\",\n    \"path\":\"/Tenant1/HTTP_Service/Pool1/members/2\",\n    \"value\": {\n          \"servicePort\": 8081,\n            \"serverAddresses\": [\n              \"10.1.20.11\"\n            ]\n        }\n  }  \n]"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 5: PATCH to Delete Service_HTTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"op\":\"remove\",\n    \"path\":\"/Tenant1/HTTP_Service\"\n  }  \n]"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 6: Test Re-deploy Service_HTTP with iRule and Custom Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        },",
									"        { ",
									"            \"path\":\"results.0.dryRun\",",
									"            \"value\":true",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"class\": \"AS3\",\n    \"action\": \"dry-run\",\n    \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.1.0\",\n        \"id\": \"SuperNetOps_Class_1_Lab2_3_Step5\",\n        \"label\": \"SuperNetOps_Class_1_Lab2_3_Step5\",\n        \"remark\": \"Super NetOps Class 1 Lab 2.3 Step 5\",\n        \"Tenant1\": {\n            \"class\": \"Tenant\",\n            \"HTTP_Service\": {\n                \"class\": \"Application\",\n                \"template\": \"http\",\n                \"serviceMain\": {\n                    \"class\": \"Service_HTTP\",\n                    \"virtualAddresses\": [\n                        \"10.1.10.121\"\n                    ],\n                    \"iRules\": [ \"Maintenance_iRule\" ],\n                    \"snat\": \"auto\",                    \n                    \"pool\": \"Pool1\",\n                    \"profileHTTP\": { \"use\": \"HTTP_Profile\" },\n                    \"profileHTTPCompression\": { \"use\": \"HTTP_Compress\" }\n                },\n                \"Pool1\": {\n                    \"class\": \"Pool\",\n                    \"monitors\": [\n                        \"http\"\n                    ],\n                    \"members\": [\n                        {\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                                \"10.1.20.11\"\n                            ]\n                        },\n                        {\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                                \"10.1.20.12\"\n                            ]\n                        }\n\n                    ]\n                },\n                \"Maintenance_iRule\": {\n                    \"class\": \"iRule\",\n                    \"iRule\": {\n                      \"url\": \"https://raw.githubusercontent.com/f5devcentral/f5-automation-labs/{{repository_branch}}/files/irules/maintenance-page.irule\"\n                    }\n                },\n                \"HTTP_Profile\": {\n                  \"class\": \"HTTP_Profile\",\n                    \"serverHeaderValue\": \"SuperNetOpsClass1\",\n                    \"xForwardedFor\": true\n                },\n                \"HTTP_Compress\": {\n                    \"class\": \"HTTP_Compress\",\n                    \"cpuSaver\": true,\n                    \"cpuSaverHigh\": 70,\n                    \"cpuSaverLow\": 50,\n                    \"selective\": true\n                }\n            }            \n        }\n    }\n }"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 7: Re-deploy Service_HTTP with iRule and Custom Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"class\": \"AS3\",\n    \"action\": \"deploy\",\n    \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.1.0\",\n        \"id\": \"SuperNetOps_Class_1_Lab2_3_Step5\",\n        \"label\": \"SuperNetOps_Class_1_Lab2_3_Step5\",\n        \"remark\": \"Super NetOps Class 1 Lab 2.3 Step 5\",\n        \"Tenant1\": {\n            \"class\": \"Tenant\",\n            \"HTTP_Service\": {\n                \"class\": \"Application\",\n                \"template\": \"http\",\n                \"serviceMain\": {\n                    \"class\": \"Service_HTTP\",\n                    \"virtualAddresses\": [\n                        \"10.1.10.121\"\n                    ],\n                    \"iRules\": [ \"Maintenance_iRule\" ],\n                    \"snat\": \"auto\",                    \n                    \"pool\": \"Pool1\",\n                    \"profileHTTP\": { \"use\": \"HTTP_Profile\" },\n                    \"profileHTTPCompression\": { \"use\": \"HTTP_Compress\" }\n                },\n                \"Pool1\": {\n                    \"class\": \"Pool\",\n                    \"monitors\": [\n                        \"http\"\n                    ],\n                    \"members\": [\n                        {\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                                \"10.1.20.11\"\n                            ]\n                        },\n                        {\n                            \"servicePort\": 8080,\n                            \"serverAddresses\": [\n                                \"10.1.20.12\"\n                            ]\n                        }\n\n                    ]\n                },\n                \"Maintenance_iRule\": {\n                    \"class\": \"iRule\",\n                    \"iRule\": {\n                      \"url\": \"https://raw.githubusercontent.com/f5devcentral/f5-automation-labs/{{repository_branch}}/files/irules/maintenance-page.irule\"\n                    }\n                },\n                \"HTTP_Profile\": {\n                  \"class\": \"HTTP_Profile\",\n                    \"serverHeaderValue\": \"SuperNetOpsClass1\",\n                    \"xForwardedFor\": true\n                },\n                \"HTTP_Compress\": {\n                    \"class\": \"HTTP_Compress\",\n                    \"cpuSaver\": true,\n                    \"cpuSaverHigh\": 70,\n                    \"cpuSaverLow\": 50,\n                    \"selective\": true\n                }\n            }            \n        }\n    }\n }"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 8: Deploy Service_HTTPS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"op\":\"add\",\n    \"path\":\"/Tenant1/HTTPS_Service\",\n      \"value\": {\n            \"class\": \"Application\",\n            \"template\": \"https\",\n            \"serviceMain\": {\n                \"class\": \"Service_HTTPS\",\n                \"virtualAddresses\": [\n                    \"10.1.10.122\"\n                ],\n                \"snat\": \"auto\",\n                \"pool\": \"Pool1\",\n                \"profileHTTP\": { \"use\": \"HTTP_Profile\" },\n                \"profileHTTPCompression\": { \"use\": \"HTTP_Compress\" },\n                \"serverTLS\": \"TLS_Offload\"\n            },\n            \"Pool1\": {\n                \"class\": \"Pool\",\n                \"monitors\": [\n                    \"http\"\n                ],\n                \"members\": [\n                    {\n                        \"servicePort\": 8081,\n                        \"serverAddresses\": [\n                            \"10.1.20.11\"\n                        ]\n                    },\n                    {\n                        \"servicePort\": 8081,\n                        \"serverAddresses\": [\n                            \"10.1.20.12\"\n                        ]\n                    }\n\n                ]\n            },\n      \t\t\"linux_high\": {\n\t\t\t\"class\": \"WAF_Policy\",\n    \t\t\"url\": \"https://raw.githubusercontent.com/f5devcentral/f5-automation-labs/master/files/asm-policies/demo-asm-policy-linux-high.xml\",\n\t\t\t\"ignoreChanges\": true\n\t\t\t},\n            \"HTTP_Profile\": {\n                \"class\": \"HTTP_Profile\",\n                \"serverHeaderValue\": \"SuperNetOpsClass1\",\n                \"xForwardedFor\": true\n            },\n            \"HTTP_Compress\": {\n                \"class\": \"HTTP_Compress\",\n                \"cpuSaver\": true,\n                \"cpuSaverHigh\": 70,\n                \"cpuSaverLow\": 50,\n                \"selective\": true\n            },                \n            \"TLS_Offload\": {\n                \"class\": \"TLS_Server\",\n                \"certificates\": [\n                    {\n                        \"certificate\": \"TLS_KeyPair\"\n                    }\n                ]\n            },\n            \"TLS_KeyPair\": {\n                \"class\": \"Certificate\",\n                \"certificate\": \"-----BEGIN CERTIFICATE-----\\nMIIDrjCCApagAwIBAgIECrPR/zANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMRIwEAYDVQQKEwlNeUNv\\nbXBhbnkxCzAJBgNVBAsTAklUMR4wHAYDVQQDExVsb2NhbGhvc3QubG9jYWxkb21h\\naW4xKTAnBgkqhkiG9w0BCQEWGnJvb3RAbG9jYWxob3N0LmxvY2FsZG9tYWluMB4X\\nDTE1MDkxMDEyNTQyM1oXDTI1MDkwNzEyNTQyM1owgZgxCzAJBgNVBAYTAlVTMQsw\\nCQYDVQQIEwJXQTEQMA4GA1UEBxMHU2VhdHRsZTESMBAGA1UEChMJTXlDb21wYW55\\nMQswCQYDVQQLEwJJVDEeMBwGA1UEAxMVbG9jYWxob3N0LmxvY2FsZG9tYWluMSkw\\nJwYJKoZIhvcNAQkBFhpyb290QGxvY2FsaG9zdC5sb2NhbGRvbWFpbjCCASIwDQYJ\\nKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4NU/ngspr58TYRGpwDGwXYhnmKBNE0\\nj9zIsAFGI///er4eEk/TuSwrmthI18a24XyZG7g8UgLaYiOCNOVma/6121ZsE2EU\\nlVIp0fL+IyVPbO3q+8s73MN/aDm/F2ksvtLQ2ONPcmyYBdizyjuvzHgegMeg6BqW\\nqdi3bd/7oAfObPNIrqLmuc0F2os9W8kAsMPt11QYuLxzeK1xaTflNP6tFC73Qwb1\\nHjNKK9kPd/pjy3vnb3lPlxf1g1bF/u2gXHrJyNgtBuUGzNaVGs4bMrMQM4zkbBB/\\nJKQbhK1NrvaeuhwwPzlW9RJnlGNvRZdb1MbrJKLKHhThtTAgZoF3DQkCAwEAATAN\\nBgkqhkiG9w0BAQsFAAOCAQEAZSXy1B9BrdCvjIj50aeFWylKQ/+7ehgrHKzbVsM3\\n1DFWqDhXvWrrPXYn68/p5hZi1/nnVcWvwf8EBvm6i00khiypzqgEFZPJje6OGa93\\nv4fN5WgmWro/Lc6vbiGrnVhysS9yb8ult//OiocDa7XDvK8u4nVYJ+PZ12FBV5R8\\nk6v5NT5sPPYM2qYXdlEpnAopMWYvAfLmSIT6l6G7yIilIDQ0BMbJz963yM4NiQLw\\nkGIwd0nfbBFsTd/c3BBG9Qj4SfoXjuWz8c+lP3f0pmuSl8zADNajI27wt1BZ1m4I\\nugCnZbIVvo2azInZ1RIFJtIJB6dpe+LHL/PJY5fWpjogzA==\\n-----END CERTIFICATE-----\",\n                \"chainCA\": \"-----BEGIN CERTIFICATE-----\\nMIIE/zCCA+egAwIBAgIEUdNARDANBgkqhkiG9w0BAQsFADCBsDELMAkGA1UEBhMC\\nVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0\\nLm5ldC9DUFMgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW\\nKGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENl\\ncnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTE0MDkyMjE3MTQ1N1oXDTI0MDkyMzAx\\nMzE1M1owgb4xCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMSgw\\nJgYDVQQLEx9TZWUgd3d3LmVudHJ1c3QubmV0L2xlZ2FsLXRlcm1zMTkwNwYDVQQL\\nEzAoYykgMjAwOSBFbnRydXN0LCBJbmMuIC0gZm9yIGF1dGhvcml6ZWQgdXNlIG9u\\nbHkxMjAwBgNVBAMTKUVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0\\neSAtIEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuoS2ctueDGvi\\nmekwAad26jK4lUEaydphTlhyz/72gnm/c2EGCqUn2LNf00VOHHLWTjLycooP94MZ\\n0GqAgABFHrDH55q/ElcnHKNoLwqHvWprDl5l8xx31dSFjXAhtLMy54ui1YY5ArG4\\n0kfO5MlJxDun3vtUfVe+8OhuwnmyOgtV4lCYFjITXC94VsHClLPyWuQnmp8k18bs\\n0JslguPMwsRFxYyXegZrKhGfqQpuSDtv29QRGUL3jwe/9VNfnD70FyzmaaxOMkxi\\nd+q36OW7NLwZi66cUee3frVTsTMi5W3PcDwa+uKbZ7aD9I2lr2JMTeBYrGQ0EgP4\\nto2UYySkcQIDAQABo4IBDzCCAQswDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQI\\nMAYBAf8CAQEwMwYIKwYBBQUHAQEEJzAlMCMGCCsGAQUFBzABhhdodHRwOi8vb2Nz\\ncC5lbnRydXN0Lm5ldDAzBgNVHR8ELDAqMCigJqAkhiJodHRwOi8vY3JsLmVudHJ1\\nc3QubmV0L3Jvb3RjYTEuY3JsMDsGA1UdIAQ0MDIwMAYEVR0gADAoMCYGCCsGAQUF\\nBwIBFhpodHRwOi8vd3d3LmVudHJ1c3QubmV0L0NQUzAdBgNVHQ4EFgQUanImetAe\\n733nO2lR1GyNn5ASZqswHwYDVR0jBBgwFoAUaJDkZ6SmU4DHhmak8fdLQ/uEvW0w\\nDQYJKoZIhvcNAQELBQADggEBAGkzg/woem99751V68U+ep11s8zDODbZNKIoaBjq\\nHmnTvefQd9q4AINOSs9v0fHBIj905PeYSZ6btp7h25h3LVY0sag82f3Azce/BQPU\\nAsXx5cbaCKUTx2IjEdFhMB1ghEXveajGJpOkt800uGnFE/aRs8lFc3a2kvZ2Clvh\\nA0e36SlMkTIjN0qcNdh4/R0f5IOJJICtt/nP5F2l1HHEhVtwH9s/HAHrGkUmMRTM\\nZb9n3srMM2XlQZHXN75BGpad5oqXnafOrE6aPb0BoGrZTyIAi0TVaWJ7LuvMuueS\\nfWlnPfy4fN5Bh9Bp6roKGHoalUOzeXEodm2h+1dK7E3IDhA=\\n-----END CERTIFICATE-----\\n-----BEGIN CERTIFICATE-----\\nMIIFAzCCA+ugAwIBAgIEUdNg7jANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMC\\nVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50\\ncnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3Qs\\nIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVz\\ndCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMTQxMDIyMTcw\\nNTE0WhcNMjQxMDIzMDczMzIyWjCBujELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVu\\ndHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwt\\ndGVybXMxOTA3BgNVBAsTMChjKSAyMDEyIEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0\\naG9yaXplZCB1c2Ugb25seTEuMCwGA1UEAxMlRW50cnVzdCBDZXJ0aWZpY2F0aW9u\\nIEF1dGhvcml0eSAtIEwxSzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB\\nANo/ltBNuS9E59s5XptQ7lylYdpBZ1MJqgCajld/KWvbx+EhJKo60I1HI9Ltchbw\\nkSHSXbe4S6iDj7eRMmjPziWTLLJ9l8j+wbQXugmeA5CTe3xJgyJoipveR8MxmHou\\nfUAL0u8+07KMqo9Iqf8A6ClYBve2k1qUcyYmrVgO5UK41epzeWRoUyW4hM+Ueq4G\\nRQyja03Qxr7qGKQ28JKyuhyIjzpSf/debYMcnfAf5cPW3aV4kj2wbSzqyc+UQRlx\\nRGi6RzwE6V26PvA19xW2nvIuFR4/R8jIOKdzRV1NsDuxjhcpN+rdBQEiu5Q2Ko1b\\nNf5TGS8IRsEqsxpiHU4r2RsCAwEAAaOCAQkwggEFMA4GA1UdDwEB/wQEAwIBBjAP\\nBgNVHRMECDAGAQH/AgEAMDMGCCsGAQUFBwEBBCcwJTAjBggrBgEFBQcwAYYXaHR0\\ncDovL29jc3AuZW50cnVzdC5uZXQwMAYDVR0fBCkwJzAloCOgIYYfaHR0cDovL2Ny\\nbC5lbnRydXN0Lm5ldC9nMmNhLmNybDA7BgNVHSAENDAyMDAGBFUdIAAwKDAmBggr\\nBgEFBQcCARYaaHR0cDovL3d3dy5lbnRydXN0Lm5ldC9ycGEwHQYDVR0OBBYEFIKi\\ncHTdvFM/z3vU981/p2DGCky/MB8GA1UdIwQYMBaAFGpyJnrQHu995ztpUdRsjZ+Q\\nEmarMA0GCSqGSIb3DQEBCwUAA4IBAQA/HBpb/0AiHY81DC2qmSerwBEycNc2KGml\\njbEnmUK+xJPrSFdDcSPE5U6trkNvknbFGe/KvG9CTBaahqkEOMdl8PUM4ErfovrO\\nGhGonGkvG9/q4jLzzky8RgzAiYDRh2uiz2vUf/31YFJnV6Bt0WRBFG00Yu0GbCTy\\nBrwoAq8DLcIzBfvLqhboZRBD9Wlc44FYmc1r07jHexlVyUDOeVW4c4npXEBmQxJ/\\nB7hlVtWNw6f1sbZlnsCDNn8WRTx0S5OKPPEr9TVwc3vnggSxGJgO1JxvGvz8pzOl\\nu7sY82t6XTKH920l5OJ2hiEeEUbNdg5vT6QhcQqEpy02qUgiUX6C\\n-----END CERTIFICATE-----\\n\",\n                \"privateKey\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC+DVP54LKa+fE2\\nERqcAxsF2IZ5igTRNI/cyLABRiP//3q+HhJP07ksK5rYSNfGtuF8mRu4PFIC2mIj\\ngjTlZmv+tdtWbBNhFJVSKdHy/iMlT2zt6vvLO9zDf2g5vxdpLL7S0NjjT3JsmAXY\\ns8o7r8x4HoDHoOgalqnYt23f+6AHzmzzSK6i5rnNBdqLPVvJALDD7ddUGLi8c3it\\ncWk35TT+rRQu90MG9R4zSivZD3f6Y8t75295T5cX9YNWxf7toFx6ycjYLQblBszW\\nlRrOGzKzEDOM5GwQfySkG4StTa72nrocMD85VvUSZ5Rjb0WXW9TG6ySiyh4U4bUw\\nIGaBdw0JAgMBAAECggEBAK//A6845+0gXMGm4S9sqM+nDhDrQT7DIB5jMqpbW+cr\\nnW0FyAtok+hVkRWNj1ST8whBeSwJoCDIP22GnJl7WbMMkcvcVa3nM8hctfICamWY\\nwdUpcHdqPixEhi5Dydg5+ZSclt0Zq2ro9TESfcr8J6ttA/DaD1bgAvWQGA39pNrU\\nM/GF1dVBWB/NmrddpyXJiH33EMKThQtkhTiTWpPqh6SbRuAKI10nZmgEjF9BlLIf\\nXrOXcCSD3w+a3DdefR7QTQ/QOjzRQpmq7fw1lKjW/7Gfi7tnNJM7ERniZ2j1UVMR\\noBbg1xBZVpq+jy7lEzMz6cJ2YZkc1HWMTWjLDTFFcEkCgYEA4OL3bNRM8X5k0V63\\nxC6BPepIF9iUwvl7EJ22+4qI2jhRlcYgJzvY3/3D6lMGUWBcg2p7di7HYHc1DImD\\n1TB3vG7Hxq1k7S+zb/n0aGUgrnbe0SclVq0YjtVXz51wySE8SDKrtC4NKPfb7FZF\\n5Qycaj8WssG3TPxGCKSWgM6MGMMCgYEA2FiXnl/Gu9eEkcvDoXWg1qDsbKOt+XYX\\njyi9TwxKOg/8VZbOM8w2VqBQ074ctNStbD9Su8Pp6ojaIMrm2Kbn+EPVfWRYQROg\\n9iDFCXId1k82KXtoLDcRw9uFtA1jUiMnqg3BmNUbyj9SrYmN0/MZqe2Lwd20orQG\\n8jdKqsloBkMCgYEAkkPsi1L1jGgZqHdDbIyWsK9tHl1WPA3JdgAuICJ1agERRymq\\nhfoNz3mccA554HmdEjgyfqZkNKCz1yilnwY8Ckm/E8B5ES9iNKVMyo1jmTVlLIGa\\nbmp8u4GU8ErFLXu5WnfiZ3lAQ/IZjvh500TFgvDvkWofDypRXpO186bjRcMCgYBJ\\nkM51tyGvzBgzL3OlWodHlE7wnjPRaPuX3YWJ9Kbk2Xy3aeFSMbWkfT0e0z2Vq+AQ\\nt/OdD4BiFQj/L5+RuieU/xQAYHe2IUORjhESJjDJKARF1MXWix9KV0I+uHK2gmfB\\nZo4XNxgNDL1Db0u/76EhbDoiwQ3kaY0XHgAQ1Q2/WwKBgCygFnLKpJQD+TMdHfjm\\nAFMgdfMq99nnKF6HeXUe/Gda9e+ZXKcr7fuj8qfZz7aWW1E8RK1ksKEUc6Zr0vp6\\nhogGsfTpudYlqkdlxOfEhYGs6Nd2sz12vigXSZ2Xg5onejlywM20aow1fdfR9pOF\\nGPJmvm4odOT2uzH0+xau9z4+\\n-----END PRIVATE KEY-----\\n\"\n            }\n        }\n    }\n]"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 9: Modify Service_HTTPS to add WAF Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " [\n  {\n    \"op\":\"add\",\n    \"path\":\"/Tenant1/HTTPS_Service/serviceMain/policyWAF\",\n    \"value\": { \"bigip\":\"/Tenant1/HTTPS_Service/linux_high\" }\n  }\n ]"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 10: POST to Delete All Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"var check_vals = [",
									"        { ",
									"            \"path\":\"results.0.message\",",
									"            \"value\":\"/success|no\\ change/\",",
									"            \"op\":\"regex\"",
									"        }",
									"    ];",
									"",
									"f5_check_response(check_vals);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n    \"class\": \"AS3\",\n    \"action\": \"deploy\",\n    \"declaration\": {\n        \"class\": \"ADC\",\n        \"schemaVersion\": \"3.1.0\",\n        \"id\": \"SuperNetOps_Class_1_Lab2_3_Step4\",\n        \"label\": \"SuperNetOps_Class_1_Lab2_3_Step4\",\n        \"remark\": \"Super NetOps Class 1 Lab 2.3 Step 4\",\n        \"Tenant1\": {\n            \"class\": \"Tenant\"        \n        }\n    }\n }"
						},
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				},
				{
					"name": "Step 11: Get Deployed AS3 Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"eval(postman.getGlobalVariable(\"_f5_workflow_functions\"));",
									"",
									"f5_check_response_code(1);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-F5-Auth-Token",
								"value": "{{bigip_a_auth_token}}"
							}
						],
						"url": {
							"raw": "https://{{bigip_a_mgmt}}/mgmt/shared/appsvcs/declare",
							"protocol": "https",
							"host": [
								"{{bigip_a_mgmt}}"
							],
							"path": [
								"mgmt",
								"shared",
								"appsvcs",
								"declare"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}